# 字节编译/优化/动态链接库文件
__pycache__/
*.py[cod]
*$py.class

# C 扩展
*.so

# 分发/打包
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  通常这些文件是在 PyInstaller 构建可执行文件之前，由 Python 脚本根据模板生成的，
#  目的是将日期或其他信息注入其中。
*.manifest
*.spec

# 安装程序日志
pip-log.txt
pip-delete-this-directory.txt

# 单元测试/覆盖率报告
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# 翻译文件
*.mo
*.pot

# Django 相关文件:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask 相关文件:
instance/
.webassets-cache

# Scrapy 相关文件:
.scrapy

# Sphinx 文档
docs/_build/

# PyBuilder
target/

# Jupyter 笔记本
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   根据 pypa/pipenv#598，建议将 Pipfile.lock 纳入版本控制。
#   然而，在协作场景下，如果存在特定平台的依赖项或不支持跨平台的依赖项，
#   pipenv 可能会安装无法正常工作的依赖项，或者无法安装所有必需的依赖项。
#Pipfile.lock

# PEP 582；供例如 github.com/David-OConnor/pyflow 使用
__pypackages__/

# Celery 相关文件
celerybeat-schedule
celerybeat.pid

# SageMath 解析文件
*.sage.py

# 环境文件
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder 项目设置
.spyderproject
.spyproject

# Rope 项目设置
.ropeproject

# mkdocs 文档
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre 类型检查器
.pyre/
.idea
